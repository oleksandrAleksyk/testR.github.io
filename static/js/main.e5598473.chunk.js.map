{"version":3,"sources":["App.js","index.js"],"names":["App","useState","dateFrom","setDateFrom","dateTo","setDateTo","interval","setInterval","result","setResult","intervalError","setIntervalError","validationError","setValidationError","useEffect","numInterval","type","value","onChange","e","target","className","onClick","numbers","convertedResult","from","slice","to","push","map","item","hours","Math","floor","minutes","findResult","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAgGeA,MA7Ff,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACRC,EADQ,KACCC,EADD,OAEYF,mBAAS,IAFrB,mBAERG,EAFQ,KAEDC,EAFC,OAGgBJ,mBAAS,IAHzB,mBAGRK,EAHQ,KAGCC,EAHD,OAIYN,mBAAS,IAJrB,mBAIRO,EAJQ,KAIDC,EAJC,OAK0BR,oBAAS,GALnC,mBAKRS,EALQ,KAKMC,EALN,OAM8BV,oBAAS,GANvC,mBAMRW,EANQ,KAMQC,EANR,KA0Db,OAlDAC,qBAAU,WACR,IAAIC,EAAuB,EAATT,EAEhBK,EADe,KAAdI,GAAgC,KAAdA,GAAgC,IAAdA,KAKvC,CAACT,IA4CF,gCACE,gCACA,gDAAkB,0BAClB,uBAAOU,KAAK,OAAQC,MAAOf,EAAUgB,SAAU,SAACC,GAAKhB,EAAYgB,EAAEC,OAAOH,aAG1E,gCACE,8CAAgB,0BAChB,uBAAOD,KAAK,OAAOC,MAAOb,EAAQc,SAAU,SAACC,GAAKd,EAAUc,EAAEC,OAAOH,aAGvE,gCACE,+CAAiB,0BACjB,uBAAOD,KAAK,OAAOC,MAAOX,EAAUY,SAAU,SAACC,GAAKZ,EAAYY,EAAEC,OAAOH,UAF3E,IAEuF,uBACrF,gCAAQP,EAAc,0BAA0B,QAIlD,8BACE,wBAAQW,UAAS,UAAKX,EAAc,eAAe,IACnDY,QAAS,kBA5DK,WACjB,IAAIC,EAAU,GACVC,EAAkB,GAClBC,EAA2B,EAApBvB,EAASwB,MAAM,EAAE,GAC5BD,EAAW,GAALA,EAA6B,EAApBvB,EAASwB,MAAM,EAAE,GAChC,IAAIC,EAAuB,EAAlBvB,EAAOsB,MAAM,EAAE,GACxBC,EAAQ,GAAHA,EAAyB,EAAlBvB,EAAOsB,MAAM,EAAE,GAC3B,IAAIX,EAAuB,EAATT,EAClB,GAAGmB,EAAKE,EACNlB,EAAU,IACVI,GAAmB,OACd,CAIL,IAHAA,GAAmB,GACnBU,EAAQK,KAAKH,GACbA,GAAMV,EACAU,EAAKE,GACTJ,EAAQK,KAAKH,GACbA,GAAMV,EAERQ,EAAQK,KAAKD,GAEbJ,EAAQM,KAAI,SAACC,GACX,IAAIC,EAAQC,KAAKC,MAAMH,EAAK,IACxBI,EAAWJ,EAAY,GAANC,EAClBA,EAAM,KACPA,EAAQ,IAAIA,GAEXG,EAAQ,KACTA,EAAS,IAAIA,GAEfV,EAAgBI,KAAK,IAAIG,EAAM,IAAIG,EAAQ,QAG7CzB,EAAUe,IA2BKW,IADd,qBAIF,gCACE,6CAAe,0BACdvB,EAAgB,wDAAwD,GACxEJ,SClFR4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5598473.chunk.js","sourcesContent":["import {useState,useEffect} from \"react\";\nimport \"./App.css\"; \n\nfunction App() {\n  let [dateFrom,setDateFrom] = useState(\"\"); \n  let [dateTo,setDateTo] = useState(\"\");\n  let [interval,setInterval] = useState(30);\n  let [result,setResult] = useState([]);\n  let [intervalError,setIntervalError] = useState(false);\n  let [validationError,setValidationError] = useState(false);\n  \n  useEffect(()=>{\n    let numInterval = interval*1;\n    if(numInterval===30||numInterval===15||numInterval===1) {\n      setIntervalError(false); \n    } else {\n      setIntervalError(true);\n    }\n  },[interval])\n\n\n\n  const findResult = ()=>{\n    let numbers = [];\n    let convertedResult = [];\n    let from = dateFrom.slice(0,2)*1;\n    from =from*60+(dateFrom.slice(3,5)*1); \n    let to = dateTo.slice(0,2)*1; \n    to = to*60+(dateTo.slice(3,5)*1); \n    let numInterval = interval*1; \n    if(from>to){      \n      setResult([]);\n      setValidationError(true);     \n    } else {\n      setValidationError(false);\n      numbers.push(from);           \n      from+=numInterval;   \n      while(from<to) {\n        numbers.push(from); \n        from+=numInterval; \n      } \n      numbers.push(to); \n      \n      numbers.map((item)=>{\n        let hours = Math.floor(item/60);\n        let minutes = (item-(hours*60));\n        if(hours<10){\n          hours = \"0\"+hours; \n        }\n        if(minutes<10){\n          minutes= \"0\"+minutes;\n        }\n        convertedResult.push(\" \"+hours+\":\"+minutes+\" \");\n      })\n\n      setResult(convertedResult);\n\n\n    }\n  }\n\n  return(\n   <div>\n     <div>\n     <label>Time From: <br/></label>\n     <input type=\"time\"  value={dateFrom} onChange={(e)=>{setDateFrom(e.target.value)}}/>\n     </div>\n\n     <div>\n       <label>Time To: <br/></label>\n       <input type=\"time\" value={dateTo} onChange={(e)=>{setDateTo(e.target.value)}} />\n     </div>\n\n     <div> \n       <label>Interval: <br/></label>\n       <input type=\"text\" value={interval} onChange={(e)=>{setInterval(e.target.value)}} /> <br/>\n       <label>{intervalError?\"Possible Value: 30,15,1\":\"\"}</label>\n     </div>\n\n\n     <div>\n       <button className={`${intervalError?\"btn-disabled\":\"\"}`}\n       onClick={()=>(findResult())}>Click</button> \n     </div>\n\n     <div>\n       <label>Result: <br/></label>\n       {validationError?\"Validation error. Time from must be less than Time to\":\"\"}\n       {result}\n     </div>\n     \n   </div>\n )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}